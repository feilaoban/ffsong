<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.flying</groupId>
    <artifactId>demo</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>	<!--父工程，只作为依赖项目，不需要编译出jar包，所以定义为pom打包格式-->
    <name>${project.artifactId}</name>
    <description>Demo project for Spring Boot</description>

    <!-- Spring Cloud Alibaba是Spring Cloud的子项目，基于Spring Cloud，符合Spring Cloud标准（Spring Cloud又基于Springboot）-->
    <!-- springcloud hoxton SR9 生产版本 -->
    <parent>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Hoxton.SR9</version>
    </parent>

    <!-- 子模块 -->
    <modules>
        <module>cloud-demo</module>
        <module>auth-demo</module>
    </modules>

    <!-- 版本号统一管理 -->
    <properties>
        <!-- 核心环境 -->
        <java.version>1.8</java.version>
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <spring-cloud-alibaba.version>2.2.6.RELEASE</spring-cloud-alibaba.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <!-- 第三方依赖 -->
        <swagger-annotations.version>1.5.21</swagger-annotations.version>
        <hutool-all.version>5.6.3</hutool-all.version>
        <mybatis-plus.version>3.4.1</mybatis-plus.version>
        <dynamic-datasource-spring-boot-starter.version>3.3.1</dynamic-datasource-spring-boot-starter.version>
        <rocketmq-client.version>4.2.0</rocketmq-client.version>
        <rocketmq-spring-boot-starter.version>2.1.0</rocketmq-spring-boot-starter.version>
        <easy-excel.version>2.2.6</easy-excel.version>
    </properties>

    <!-- dependencyManagement 与 dependencies 的区别
         1. 所有声明在dependencies里的依赖都会自动引入，并默认被所有的子项目继承。
         2. dependencies即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项（全部继承）
         3. dependencyManagement是依赖管理，可以管理子模块或者父模块依赖的版本。
         4. dependencyManagement里type和scope需要指定pom和import，表示父项目只是单纯的声明依赖（仅用于统一版本），并不实现引入，因此子项目需要显式的声明需要用的依赖。
            如果不在子项目中声明依赖，是不会从父项目中继承下来的；只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，并且version和scope都读取自父pom
            另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。
    -->

    <!-- 要注意的是，spring-boot-dependencies和spring-cloud-alibaba-dependencies这两个依赖实际上并不是jar包，
         我们点击进去就可以知道，这是一个聚合项目，里面只声明了常用的依赖的版本。
         具体的依赖引入应放到相应的子模块下，如网关需要引用 spring-cloud-starter-gateway，应放在gateway模块的pom中引入，公共依赖可放在父pom中引入或放在公共模块commons中。
         由于本demo只有一个子模块，所以都在父pom引入了，实例项目中pom管理规范可参考木谷博客的项目。 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- 注意：由于spring-boot-starter-web默认替我们引入了核心启动器spring-boot-starter，因此，当Spring Boot项目中的
         pom.xml引入了spring-boot-starter-web的依赖后，就无须再引入spring-boot-starter核心启动器的依赖了。 -->
        <!-- SpringBoot Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 测试依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- swagger -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <!--配置处理器-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- nacos -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <!-- spring security oauth2 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-oauth2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <!-- springboot集成redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- hutool -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool-all.version}</version>
        </dependency>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- rocketMQ -->
        <dependency>
            <groupId>org.apache.rocketmq</groupId>
            <artifactId>rocketmq-client</artifactId>
            <version>${rocketmq-client.version}</version>
        </dependency>
        <!-- easyExcel -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
            <version>${easy-excel.version}</version>
        </dependency>
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- mybatis-plus-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
            <version>${dynamic-datasource-spring-boot-starter.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
